#+TITLE: Biorgo

* template API
  #+NAME: sort
  #+BEGIN_SRC go
// sort
  {{ with sortStorg . "HOST_DATE" }}{{ end }}

// filter
  {{ with filterStorg . "MODULE" "journal" }} {{ end }}

// between dates
  {{ with betweenDates . "HOST_DATE" "<2016-01-01>" "<2017-01-01>" }}{{ end }}

// unique date
  {{ range $nodeIndex, $node := uniqueDate . "HOST_DATE"}}{{ end }}

// index
  {{ range $nodeIndex, $node := . }}{{ $nodeIndex }}{{ end }}

// reached2400
  {{ range $nodeIndex, $node := .}}
  {{ if reached2400 $nodeIndex }}"reached node index divisible by 2400"{{ end }}
  {{ end }}

// shorten
  {{ printf "%.50s" $node.datum.entry }}

// prepare struct
type FilePrepared struct {
	Name       string `json:"name"`
	ModTime    string `json:"mod_time"`
	Size       int64  `json:"size"`
	Path       string `json:"path"`
	ParsedTime string `json:"parsed_time"`
	Contents   string `json:"contents"`
}
  #+END_SRC
* command API
#+BEGIN_SRC sh
# outputs to file when -o is specified
./biorgo-commit -i prepare/prepare-part-1.bi.org | jq > prepare/prepare-part-1.json

# outputs to stdout when -o is not specified
./biorgo-prepare -i sunduk/sunduk-part-1/ -t templates/prepare.tmpl -o prepare/prepare-part-1.org

# outputs to stdout when -o is not specified
./biorgo-report -r desmi -i storg/storg.json -t templates/desmi-all-guest-asc.tmpl -o reports/desmi-all-guest-asc.org

# outputs to stdout when -o is not specified
./biorgo-report -r dot -i storg/storg.json -t templates/dot-2019-2021-guest.tmpl -o reports/dot-2019-2021-guest.dot

# creates output folder if it does not exist
./biorgo-report -r ravdia -i storg/storg.json -t templates/ravdi.tmpl -o reports/ravdia/
#+END_SRC

#+BEGIN_SRC sh

cat test.json | ./templ-cat -t ../templates/dot.tmpl > test.dot
#+END_SRC
* templates
** desmi complete sorted by HOST_DATE
#+BEGIN_SRC go :tangle templates/desmi-all-host-asc.tmpl
{{ range sortStorg . "HOST_DATE" }}* .
:PROPERTIES: {{ with .metadatum }}
:COMMENT: {{ with .COMMENT }}{{ . }}{{ end }}
:GUEST_DATE: {{ with .GUEST_DATE }}{{ . }}{{ end }}
:GUEST: {{ with .GUEST }}{{ . }}{{ end }}
:HOST_DATE: {{ with .HOST_DATE }} {{ . }}{{ end }}
:HOST: {{ with .HOST }}{{ . }}{{ end }}
:LABEL: {{ with .LABEL }}{{ . }}{{ end }}
:MODULE: {{ with .MODULE }}{{ . }}{{ end }}
:TYPE: {{ with .TYPE }}{{ . }}{{ end }}{{ end }}
:UUID: {{ with .datum.uuid }}{{ . }}{{ end }}
:END:
{{ with .datum.entry }}{{ . }}{{ end }}{{ end }}
#+END_SRC
** desmi complete sorted by GUEST_DATE
#+BEGIN_SRC go :tangle templates/desmi-all-guest-asc.tmpl
{{ range sortStorg . "GUEST_DATE" }}* .
:PROPERTIES: {{ with .metadatum }}
:COMMENT: {{ with .COMMENT }}{{ . }}{{ end }}
:GUEST_DATE: {{ with .GUEST_DATE }}{{ . }}{{ end }}
:GUEST: {{ with .GUEST }}{{ . }}{{ end }}
:HOST_DATE: {{ with .HOST_DATE }} {{ . }}{{ end }}
:HOST: {{ with .HOST }}{{ . }}{{ end }}
:LABEL: {{ with .LABEL }}{{ . }}{{ end }}
:MODULE: {{ with .MODULE }}{{ . }}{{ end }}
:TYPE: {{ with .TYPE }}{{ . }}{{ end }}{{ end }}
:UUID: {{ with .datum.uuid }}{{ . }}{{ end }}
:END:
{{ with .datum.entry }}{{ . }}{{ end }}{{ end }}
#+END_SRC
** dot
#+BEGIN_SRC go :tangle templates/dot.tmpl
{{ with sortStorg . "HOST_DATE" }}
digraph storg_timeline {
imap=yes;
node [shape="plain"];rankdir=TB;

/* date <-> versions ranks */
/* {rank=same; "1995-05-01" "Postgres95-0.01"} */{{ range $nodeIndex, $node := . }}
{rank=same; "{{ $node.HOST_DATE }}""{{ $nodeIndex }}"}{{ end }}

/* Dates relations */
/*"<1995-01-01>" -> */{{ range $nodeIndex, $node := uniqueDate . "HOST_DATE"}}
{{ if reached2400 $nodeIndex }}"{{ $node.HOST_DATE }}"
"{{ $node.HOST_DATE }}" ->
{{ else }}"{{ $node.HOST_DATE }}" ->{{ end }}{{ end }}
"Future"

/* Versions relations */
/*"1" [label="Postgres95-0.03"] ;*/{{ range $nodeIndex, $node := . }}{{ if and $node.HOST_DATE $node.GUEST_DATE }}
"{{ $nodeIndex }}" [label="*",tooltip="{{ with formatStringDot $node.DATUM }}{{ printf "%.50s" . }}{{ end }}",href="ravdia/{{ $node.UUID }}.html", target="test"];{{ end }}{{ end }}

}
{{ end }}
#+END_SRC
** ravdi
#+BEGIN_SRC go :tangle templates/ravdi.tmpl
,* .
:PROPERTIES: {{ with .metadatum }}
:COMMENT: {{ with .COMMENT }}{{ . }}{{ end }}
:GUEST_DATE: {{ with .GUEST_DATE }}{{ . }}{{ end }}
:GUEST: {{ with .GUEST }}{{ . }}{{ end }}
:HOST_DATE: {{ with .HOST_DATE }} {{ . }}{{ end }}
:HOST: {{ with .HOST }}{{ . }}{{ end }}
:LABEL: {{ with .LABEL }}{{ . }}{{ end }}
:MODULE: {{ with .MODULE }}{{ . }}{{ end }}
:TYPE: {{ with .TYPE }}{{ . }}{{ end }}{{ end }}
:UUID: {{ with .datum.uuid }}{{ . }}{{ end }}
:END:
{{ with .datum.entry }}{{ . }}{{ end }}
#+END_SRC

